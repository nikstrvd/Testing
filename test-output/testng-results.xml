<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="13" passed="11" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-02-22T18:25:13 IST" name="Suite" finished-at="2022-02-22T18:26:38 IST" duration-ms="85579">
    <groups>
    </groups>
    <test started-at="2022-02-22T18:25:13 IST" name="Test" finished-at="2022-02-22T18:26:38 IST" duration-ms="85579">
      <class name="com.tms.tests.LoginPageTest">
        <test-method is-config="true" signature="setUp([Ljava.lang.Object;)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:25:14 IST" name="setUp" finished-at="2022-02-22T18:25:43 IST" duration-ms="29003" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@19569ebd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp([Ljava.lang.Object;)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:25:14 IST" name="setUp" finished-at="2022-02-22T18:25:46 IST" duration-ms="32219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@4632cfc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp([Ljava.lang.Object;)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:25:14 IST" name="setUp" finished-at="2022-02-22T18:25:43 IST" duration-ms="29002" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@6e1f8469]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp([Ljava.lang.Object;)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:25:14 IST" name="setUp" finished-at="2022-02-22T18:25:43 IST" duration-ms="29363" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@2e380628]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp([Ljava.lang.Object;)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:25:14 IST" name="setUp" finished-at="2022-02-22T18:25:43 IST" duration-ms="29337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@3b6c624]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="forgetpasswordlinktest(java.util.Map)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:25:43 IST" name="forgetpasswordlinktest" description="check forgetpassword link test" data-provider="getData" finished-at="2022-02-22T18:25:58 IST" duration-ms="14651" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FeesPaid=, Email=, Computer Navigation Skill=, Unit=, Scheduleinfodesc=, linkedIn URL=, reference=, Name3=, password=, Billing Address=, Remarks=, Postalcode=, Street=, confirmpassword=, Name2=, Threshold=, Contact Number=, Date Of Birth=, Company Contact Person=, Meal Restrictions Type=, testname=forgetpasswordlinktest, execute=yes, Experience=, submenu=, newpassword1=, name=, Block=, name1=, Building=, Description=, phonenumber=, EnterText=, Course Brochure Determined=, Company Contact Person Number=, Deadline Date=, browser=chrome, Mobile No=, Email1=, Nric=, Domain Area of Practice=, Room=, Billing Email=, email=, Age=, Floor=, Maxintakesize=, menuname=, Coursecode=, Company Contact Person Email=, Coursevacdesc=, Scheduleinformation=, Company SME=, TPGateway=, Billing Zip=, Minintakesize=, Payment Amount=, oldpassword1=, Company Name=, Skill=, coursecode=, Meal Restrictions=, username=, Scheduleinfo=}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for presence of element located by: By.xpath: //li[.="We can't find a user with that email address."] (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for presence of element located by: By.xpath: //li[.="We can't find a user with that email address."] (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:138)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231)
at com.tms.factories.ExplicitWaitFactory.performExplicitWait(ExplicitWaitFactory.java:20)
at com.tms.pages.BasePage.click(BasePage.java:21)
at com.tms.pages.LoginPage.Checkvalidation1(LoginPage.java:43)
at com.tms.tests.LoginPageTest.forgetpasswordlinktest(LoginPageTest.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:77)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:15)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//li[.="We can't find a user with that email address."]"}
  (Session info: chrome=98.0.4758.102)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.0.0-beta-3', revision: '5d108f9a67'
System info: host: 'LAPTOP-PVF3C24O', ip: '192.168.1.17', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.13'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [bdbb6270bfcc85e294e8891cfe43c723, findElement {using=xpath, value=//li[.="We can't find a user with that email address."]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 98.0.4758.102, chrome: {chromedriverVersion: 97.0.4692.71 (adefa7837d02a..., userDataDir: C:\Users\2STALL~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:64029}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:64029/devtoo..., se:cdpVersion: 98.0.4758.102, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: bdbb6270bfcc85e294e8891cfe43c723
at jdk.internal.reflect.GeneratedConstructorAccessor27.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:198)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:131)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:153)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:128)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:619)
at org.openqa.selenium.remote.RemoteWebDriver$Mechanism$2.findElement(RemoteWebDriver.java:1258)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:386)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:174)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:171)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:208)
... 19 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgetpasswordlinktest -->
        <test-method signature="forgetpasswordlinktest(java.util.Map)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:25:43 IST" name="forgetpasswordlinktest" description="check forgetpassword link test" data-provider="getData" finished-at="2022-02-22T18:25:49 IST" duration-ms="5862" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FeesPaid=, Email=, Computer Navigation Skill=, Unit=, Scheduleinfodesc=, linkedIn URL=, reference=, Name3=, password=, Billing Address=, Remarks=, Postalcode=, Street=, confirmpassword=, Name2=, Threshold=, Contact Number=, Date Of Birth=, Company Contact Person=, Meal Restrictions Type=, testname=forgetpasswordlinktest, execute=yes, Experience=, submenu=, newpassword1=, name=, Block=, name1=, Building=, Description=, phonenumber=, EnterText=, Course Brochure Determined=, Company Contact Person Number=, Deadline Date=, browser=chrome, Mobile No=, Email1=, Nric=, Domain Area of Practice=, Room=, Billing Email=, email=, Age=, Floor=, Maxintakesize=, menuname=, Coursecode=, Company Contact Person Email=, Coursevacdesc=, Scheduleinformation=, Company SME=, TPGateway=, Billing Zip=, Minintakesize=, Payment Amount=, oldpassword1=, Company Name=, Skill=, coursecode=, Meal Restrictions=, username=test@test.com, Scheduleinfo=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgetpasswordlinktest -->
        <test-method signature="forgetpasswordlinktest2(java.util.Map)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:25:43 IST" name="forgetpasswordlinktest2" description="check forgetpassword link test" data-provider="getData" finished-at="2022-02-22T18:25:50 IST" duration-ms="6367" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FeesPaid=, Email=, Computer Navigation Skill=, Unit=, Scheduleinfodesc=, linkedIn URL=, reference=, Name3=, password=, Billing Address=, Remarks=, Postalcode=, Street=, confirmpassword=, Name2=, Threshold=, Contact Number=, Date Of Birth=, Company Contact Person=, Meal Restrictions Type=, testname=forgetpasswordlinktest2, execute=yes, Experience=, submenu=, newpassword1=, name=, Block=, name1=, Building=, Description=, phonenumber=, EnterText=, Course Brochure Determined=, Company Contact Person Number=, Deadline Date=, browser=chrome, Mobile No=, Email1=, Nric=, Domain Area of Practice=, Room=, Billing Email=, email=, Age=, Floor=, Maxintakesize=, menuname=, Coursecode=, Company Contact Person Email=, Coursevacdesc=, Scheduleinformation=, Company SME=, TPGateway=, Billing Zip=, Minintakesize=, Payment Amount=, oldpassword1=, Company Name=, Skill=, coursecode=, Meal Restrictions=, username=nikhil, Scheduleinfo=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgetpasswordlinktest2 -->
        <test-method signature="forgetpasswordlinktest1(java.util.Map)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:25:43 IST" name="forgetpasswordlinktest1" description="check forgetpassword link test" data-provider="getData" finished-at="2022-02-22T18:25:49 IST" duration-ms="5238" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FeesPaid=, Email=, Computer Navigation Skill=, Unit=, Scheduleinfodesc=, linkedIn URL=, reference=, Name3=, password=, Billing Address=, Remarks=, Postalcode=, Street=, confirmpassword=, Name2=, Threshold=, Contact Number=, Date Of Birth=, Company Contact Person=, Meal Restrictions Type=, testname=forgetpasswordlinktest1, execute=yes, Experience=, submenu=, newpassword1=, name=, Block=, name1=, Building=, Description=, phonenumber=, EnterText=, Course Brochure Determined=, Company Contact Person Number=, Deadline Date=, browser=chrome, Mobile No=, Email1=, Nric=, Domain Area of Practice=, Room=, Billing Email=, email=, Age=, Floor=, Maxintakesize=, menuname=, Coursecode=, Company Contact Person Email=, Coursevacdesc=, Scheduleinformation=, Company SME=, TPGateway=, Billing Zip=, Minintakesize=, Payment Amount=, oldpassword1=, Company Name=, Skill=, coursecode=, Meal Restrictions=, username=nikhil@2stallions.com, Scheduleinfo=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgetpasswordlinktest1 -->
        <test-method signature="forgetpasswordlinktest(java.util.Map)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:25:46 IST" name="forgetpasswordlinktest" description="check forgetpassword link test" data-provider="getData" finished-at="2022-02-22T18:25:58 IST" duration-ms="11923" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FeesPaid=, Email=, Computer Navigation Skill=, Unit=, Scheduleinfodesc=, linkedIn URL=, reference=, Name3=, password=, Billing Address=, Remarks=, Postalcode=, Street=, confirmpassword=, Name2=, Threshold=, Contact Number=, Date Of Birth=, Company Contact Person=, Meal Restrictions Type=, testname=forgetpasswordlinktest, execute=yes, Experience=, submenu=, newpassword1=, name=, Block=, name1=, Building=, Description=, phonenumber=, EnterText=, Course Brochure Determined=, Company Contact Person Number=, Deadline Date=, browser=chrome, Mobile No=, Email1=, Nric=, Domain Area of Practice=, Room=, Billing Email=, email=, Age=, Floor=, Maxintakesize=, menuname=, Coursecode=, Company Contact Person Email=, Coursevacdesc=, Scheduleinformation=, Company SME=, TPGateway=, Billing Zip=, Minintakesize=, Payment Amount=, oldpassword1=, Company Name=, Skill=, coursecode=, Meal Restrictions=, username=, Scheduleinfo=}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for presence of element located by: By.xpath: //li[.="We can't find a user with that email address."] (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for presence of element located by: By.xpath: //li[.="We can't find a user with that email address."] (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:138)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231)
at com.tms.factories.ExplicitWaitFactory.performExplicitWait(ExplicitWaitFactory.java:20)
at com.tms.pages.BasePage.click(BasePage.java:21)
at com.tms.pages.LoginPage.Checkvalidation1(LoginPage.java:43)
at com.tms.tests.LoginPageTest.forgetpasswordlinktest(LoginPageTest.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:77)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:15)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//li[.="We can't find a user with that email address."]"}
  (Session info: chrome=98.0.4758.102)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.0.0-beta-3', revision: '5d108f9a67'
System info: host: 'LAPTOP-PVF3C24O', ip: '192.168.1.17', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.13'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [05fc9752e6a0cac257fc60ff4bf6a721, findElement {using=xpath, value=//li[.="We can't find a user with that email address."]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 98.0.4758.102, chrome: {chromedriverVersion: 97.0.4692.71 (adefa7837d02a..., userDataDir: C:\Users\2STALL~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:64032}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:64032/devtoo..., se:cdpVersion: 98.0.4758.102, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 05fc9752e6a0cac257fc60ff4bf6a721
at jdk.internal.reflect.GeneratedConstructorAccessor27.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:198)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:131)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:153)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:128)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:619)
at org.openqa.selenium.remote.RemoteWebDriver$Mechanism$2.findElement(RemoteWebDriver.java:1258)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:386)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:174)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:171)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:208)
... 19 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgetpasswordlinktest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:25:49 IST" name="tearDown" finished-at="2022-02-22T18:25:51 IST" duration-ms="2329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:25:49 IST" name="tearDown" finished-at="2022-02-22T18:25:50 IST" duration-ms="1524" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:25:50 IST" name="tearDown" finished-at="2022-02-22T18:25:51 IST" duration-ms="1385" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp([Ljava.lang.Object;)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:25:51 IST" name="setUp" finished-at="2022-02-22T18:26:10 IST" duration-ms="19308" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@1eaf1e62]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp([Ljava.lang.Object;)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:25:51 IST" name="setUp" finished-at="2022-02-22T18:26:09 IST" duration-ms="17824" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@c81fd12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp([Ljava.lang.Object;)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:25:51 IST" name="setUp" finished-at="2022-02-22T18:26:09 IST" duration-ms="18432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@62e6a3ec]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp([Ljava.lang.Object;)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:25:51 IST" name="setUp" finished-at="2022-02-22T18:26:09 IST" duration-ms="17636" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@5754de72]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:25:59 IST" name="tearDown" finished-at="2022-02-22T18:26:10 IST" duration-ms="10923" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:25:59 IST" name="tearDown" finished-at="2022-02-22T18:26:03 IST" duration-ms="3527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="loginlogouttest1(java.util.Map)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:26:09 IST" name="loginlogouttest1" description="To check wheather the user can successfully login and logout" data-provider="getData" finished-at="2022-02-22T18:26:22 IST" duration-ms="12956" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FeesPaid=, Email=, Computer Navigation Skill=, Unit=, Scheduleinfodesc=, linkedIn URL=, reference=, Name3=, password=123456, Billing Address=, Remarks=, Postalcode=, Street=, confirmpassword=, Name2=, Threshold=, Contact Number=, Date Of Birth=, Company Contact Person=, Meal Restrictions Type=, testname=loginlogouttest1, execute=yes, Experience=, submenu=, newpassword1=, name=, Block=, name1=, Building=, Description=, phonenumber=, EnterText=, Course Brochure Determined=, Company Contact Person Number=, Deadline Date=, browser=chrome, Mobile No=, Email1=, Nric=, Domain Area of Practice=, Room=, Billing Email=, email=, Age=, Floor=, Maxintakesize=, menuname=, Coursecode=, Company Contact Person Email=, Coursevacdesc=, Scheduleinformation=, Company SME=, TPGateway=, Billing Zip=, Minintakesize=, Payment Amount=, oldpassword1=, Company Name=, Skill=, coursecode=, Meal Restrictions=, username=superadmin@mail.com, Scheduleinfo=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginlogouttest1 -->
        <test-method signature="loginlogouttest(java.util.Map)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:26:09 IST" name="loginlogouttest" description="To check wheather the user can successfully login and logout" data-provider="getData" finished-at="2022-02-22T18:26:10 IST" duration-ms="921" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FeesPaid=, Email=, Computer Navigation Skill=, Unit=, Scheduleinfodesc=, linkedIn URL=, reference=, Name3=, password=, Billing Address=, Remarks=, Postalcode=, Street=, confirmpassword=, Name2=, Threshold=, Contact Number=, Date Of Birth=, Company Contact Person=, Meal Restrictions Type=, testname=loginlogouttest, execute=yes, Experience=, submenu=, newpassword1=, name=, Block=, name1=, Building=, Description=, phonenumber=, EnterText=, Course Brochure Determined=, Company Contact Person Number=, Deadline Date=, browser=chrome, Mobile No=, Email1=, Nric=, Domain Area of Practice=, Room=, Billing Email=, email=, Age=, Floor=, Maxintakesize=, menuname=, Coursecode=, Company Contact Person Email=, Coursevacdesc=, Scheduleinformation=, Company SME=, TPGateway=, Billing Zip=, Minintakesize=, Payment Amount=, oldpassword1=, Company Name=, Skill=, coursecode=, Meal Restrictions=, username=superadmin@mail.com, Scheduleinfo=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginlogouttest -->
        <test-method signature="loginlogouttest(java.util.Map)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:26:09 IST" name="loginlogouttest" description="To check wheather the user can successfully login and logout" data-provider="getData" finished-at="2022-02-22T18:26:10 IST" duration-ms="565" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FeesPaid=, Email=, Computer Navigation Skill=, Unit=, Scheduleinfodesc=, linkedIn URL=, reference=, Name3=, password=123456, Billing Address=, Remarks=, Postalcode=, Street=, confirmpassword=, Name2=, Threshold=, Contact Number=, Date Of Birth=, Company Contact Person=, Meal Restrictions Type=, testname=loginlogouttest, execute=yes, Experience=, submenu=, newpassword1=, name=, Block=, name1=, Building=, Description=, phonenumber=, EnterText=, Course Brochure Determined=, Company Contact Person Number=, Deadline Date=, browser=chrome, Mobile No=, Email1=, Nric=, Domain Area of Practice=, Room=, Billing Email=, email=, Age=, Floor=, Maxintakesize=, menuname=, Coursecode=, Company Contact Person Email=, Coursevacdesc=, Scheduleinformation=, Company SME=, TPGateway=, Billing Zip=, Minintakesize=, Payment Amount=, oldpassword1=, Company Name=, Skill=, coursecode=, Meal Restrictions=, username=, Scheduleinfo=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginlogouttest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:26:10 IST" name="tearDown" finished-at="2022-02-22T18:26:12 IST" duration-ms="1739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp([Ljava.lang.Object;)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:26:10 IST" name="setUp" finished-at="2022-02-22T18:26:20 IST" duration-ms="9707" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@31ee96f4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:26:10 IST" name="tearDown" finished-at="2022-02-22T18:26:19 IST" duration-ms="8939" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="loginlogouttest(java.util.Map)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:26:10 IST" name="loginlogouttest" description="To check wheather the user can successfully login and logout" data-provider="getData" finished-at="2022-02-22T18:26:19 IST" duration-ms="8950" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FeesPaid=, Email=, Computer Navigation Skill=, Unit=, Scheduleinfodesc=, linkedIn URL=, reference=, Name3=, password=123456, Billing Address=, Remarks=, Postalcode=, Street=, confirmpassword=, Name2=, Threshold=, Contact Number=, Date Of Birth=, Company Contact Person=, Meal Restrictions Type=, testname=loginlogouttest, execute=yes, Experience=, submenu=, newpassword1=, name=, Block=, name1=, Building=, Description=, phonenumber=, EnterText=, Course Brochure Determined=, Company Contact Person Number=, Deadline Date=, browser=chrome, Mobile No=, Email1=, Nric=, Domain Area of Practice=, Room=, Billing Email=, email=, Age=, Floor=, Maxintakesize=, menuname=, Coursecode=, Company Contact Person Email=, Coursevacdesc=, Scheduleinformation=, Company SME=, TPGateway=, Billing Zip=, Minintakesize=, Payment Amount=, oldpassword1=, Company Name=, Skill=, coursecode=, Meal Restrictions=, username=superadmin@mail.com, Scheduleinfo=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginlogouttest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:26:19 IST" name="tearDown" finished-at="2022-02-22T18:26:22 IST" duration-ms="2642" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="loginlogouttest2(java.util.Map)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:26:20 IST" name="loginlogouttest2" description="To check wheather the user can successfully login and logout" data-provider="getData" finished-at="2022-02-22T18:26:22 IST" duration-ms="2673" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FeesPaid=, Email=, Computer Navigation Skill=, Unit=, Scheduleinfodesc=, linkedIn URL=, reference=, Name3=, password=123456, Billing Address=, Remarks=, Postalcode=, Street=, confirmpassword=, Name2=, Threshold=, Contact Number=, Date Of Birth=, Company Contact Person=, Meal Restrictions Type=, testname=loginlogouttest2, execute=yes, Experience=, submenu=, newpassword1=, name=, Block=, name1=, Building=, Description=, phonenumber=, EnterText=, Course Brochure Determined=, Company Contact Person Number=, Deadline Date=, browser=chrome, Mobile No=, Email1=, Nric=, Domain Area of Practice=, Room=, Billing Email=, email=, Age=, Floor=, Maxintakesize=, menuname=, Coursecode=, Company Contact Person Email=, Coursevacdesc=, Scheduleinformation=, Company SME=, TPGateway=, Billing Zip=, Minintakesize=, Payment Amount=, oldpassword1=, Company Name=, Skill=, coursecode=, Meal Restrictions=, username=                     , Scheduleinfo=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginlogouttest2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:26:22 IST" name="tearDown" finished-at="2022-02-22T18:26:23 IST" duration-ms="1117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp([Ljava.lang.Object;)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:26:22 IST" name="setUp" finished-at="2022-02-22T18:26:34 IST" duration-ms="12555" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@320494b6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:26:22 IST" name="tearDown" finished-at="2022-02-22T18:26:23 IST" duration-ms="659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp([Ljava.lang.Object;)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:26:23 IST" name="setUp" finished-at="2022-02-22T18:26:35 IST" duration-ms="12263" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@652ab8d9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp([Ljava.lang.Object;)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:26:23 IST" name="setUp" finished-at="2022-02-22T18:26:36 IST" duration-ms="12733" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@14fc5d40]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginlogouttest3(java.util.Map)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:26:34 IST" name="loginlogouttest3" description="To check wheather the user can successfully login and logout" data-provider="getData" finished-at="2022-02-22T18:26:36 IST" duration-ms="1855" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FeesPaid=, Email=, Computer Navigation Skill=, Unit=, Scheduleinfodesc=, linkedIn URL=, reference=, Name3=, password=                , Billing Address=, Remarks=, Postalcode=, Street=, confirmpassword=, Name2=, Threshold=, Contact Number=, Date Of Birth=, Company Contact Person=, Meal Restrictions Type=, testname=loginlogouttest3, execute=yes, Experience=, submenu=, newpassword1=, name=, Block=, name1=, Building=, Description=, phonenumber=, EnterText=, Course Brochure Determined=, Company Contact Person Number=, Deadline Date=, browser=chrome, Mobile No=, Email1=, Nric=, Domain Area of Practice=, Room=, Billing Email=, email=, Age=, Floor=, Maxintakesize=, menuname=, Coursecode=, Company Contact Person Email=, Coursevacdesc=, Scheduleinformation=, Company SME=, TPGateway=, Billing Zip=, Minintakesize=, Payment Amount=, oldpassword1=, Company Name=, Skill=, coursecode=, Meal Restrictions=, username=superadmin@mail.com, Scheduleinfo=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginlogouttest3 -->
        <test-method signature="loginlogouttest4(java.util.Map)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:26:35 IST" name="loginlogouttest4" description="To check wheather the user can successfully login and logout" data-provider="getData" finished-at="2022-02-22T18:26:37 IST" duration-ms="1812" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FeesPaid=, Email=, Computer Navigation Skill=, Unit=, Scheduleinfodesc=, linkedIn URL=, reference=, Name3=, password=124525, Billing Address=, Remarks=, Postalcode=, Street=, confirmpassword=, Name2=, Threshold=, Contact Number=, Date Of Birth=, Company Contact Person=, Meal Restrictions Type=, testname=loginlogouttest4, execute=yes, Experience=, submenu=, newpassword1=, name=, Block=, name1=, Building=, Description=, phonenumber=, EnterText=, Course Brochure Determined=, Company Contact Person Number=, Deadline Date=, browser=chrome, Mobile No=, Email1=, Nric=, Domain Area of Practice=, Room=, Billing Email=, email=, Age=, Floor=, Maxintakesize=, menuname=, Coursecode=, Company Contact Person Email=, Coursevacdesc=, Scheduleinformation=, Company SME=, TPGateway=, Billing Zip=, Minintakesize=, Payment Amount=, oldpassword1=, Company Name=, Skill=, coursecode=, Meal Restrictions=, username=superadmin@mail.com, Scheduleinfo=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginlogouttest4 -->
        <test-method signature="loginlogouttest4(java.util.Map)[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:26:36 IST" name="loginlogouttest4" description="To check wheather the user can successfully login and logout" data-provider="getData" finished-at="2022-02-22T18:26:38 IST" duration-ms="1872" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{FeesPaid=, Email=, Computer Navigation Skill=, Unit=, Scheduleinfodesc=, linkedIn URL=, reference=, Name3=, password=123456, Billing Address=, Remarks=, Postalcode=, Street=, confirmpassword=, Name2=, Threshold=, Contact Number=, Date Of Birth=, Company Contact Person=, Meal Restrictions Type=, testname=loginlogouttest4, execute=yes, Experience=, submenu=, newpassword1=, name=, Block=, name1=, Building=, Description=, phonenumber=, EnterText=, Course Brochure Determined=, Company Contact Person Number=, Deadline Date=, browser=chrome, Mobile No=, Email1=, Nric=, Domain Area of Practice=, Room=, Billing Email=, email=, Age=, Floor=, Maxintakesize=, menuname=, Coursecode=, Company Contact Person Email=, Coursevacdesc=, Scheduleinformation=, Company SME=, TPGateway=, Billing Zip=, Minintakesize=, Payment Amount=, oldpassword1=, Company Name=, Skill=, coursecode=, Meal Restrictions=, username=test@test.com, Scheduleinfo=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginlogouttest4 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:26:36 IST" name="tearDown" finished-at="2022-02-22T18:26:37 IST" duration-ms="1108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:26:37 IST" name="tearDown" finished-at="2022-02-22T18:26:38 IST" duration-ms="826" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tms.tests.LoginPageTest@6bd61f98]" started-at="2022-02-22T18:26:38 IST" name="tearDown" finished-at="2022-02-22T18:26:38 IST" duration-ms="690" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.tms.tests.LoginPageTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
